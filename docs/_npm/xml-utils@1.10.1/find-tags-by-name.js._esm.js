/**
 * Bundled by jsDelivr using Rollup v2.79.1 and Terser v5.19.2.
 * Original file: /npm/xml-utils@1.10.1/find-tags-by-name.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var e={exports:{}},t={exports:{}},n={exports:{}};function s(e,t,n){const s=new RegExp(t).exec(e.slice(n));return s?n+s.index:-1}n.exports=s,n.exports.default=s;var o={exports:{}};function r(e,t,n){const s=new RegExp(t).exec(e.slice(n));return s?n+s.index+s[0].length-1:-1}o.exports=r,o.exports.default=r;var l={exports:{}};function x(e,t){const n=new RegExp(t,"g"),s=e.match(n);return s?s.length:0}l.exports=x,l.exports.default=x;const c=n.exports,u=o.exports,i=l.exports;function a(e,t,n){const s=n&&n.debug||!1,o=!(n&&!1===typeof n.nested),r=n&&n.startIndex||0;s&&console.log("[xml-utils] starting findTagByName with",t," and ",n);const l=c(e,`<${t}[ \n>/]`,r);if(s&&console.log("[xml-utils] start:",l),-1===l)return;const x=e.slice(l+t.length);let a=u(x,"^[^<]*[ /]>",0);const p=-1!==a&&"/"===x[a-1];if(s&&console.log("[xml-utils] selfClosing:",p),!1===p)if(o){let e=0,n=1,s=0;for(;-1!==(a=u(x,"[ /]"+t+">",e));){const o=x.substring(e,a+1);if(n+=i(o,"<"+t+"[ \n\t>]"),s+=i(o,"</"+t+">"),s>=n)break;e=a}}else a=u(x,"[ /]"+t+">",0);const d=l+t.length+a+1;if(s&&console.log("[xml-utils] end:",d),-1===d)return;const f=e.slice(l,d);let g;return g=p?null:f.slice(f.indexOf(">")+1,f.lastIndexOf("<")),{inner:g,outer:f,start:l,end:d}}t.exports=a,t.exports.default=a;const p=t.exports;function d(e,t,n){const s=[],o=n&&n.debug||!1,r=!n||"boolean"!=typeof n.nested||n.nested;let l,x=n&&n.startIndex||0;for(;l=p(e,t,{debug:o,startIndex:x});)x=r?l.start+1+t.length:l.end,s.push(l);return o&&console.log("findTagsByName found",s.length,"tags"),s}e.exports=d,e.exports.default=d;var f=e.exports;export{f as default};
